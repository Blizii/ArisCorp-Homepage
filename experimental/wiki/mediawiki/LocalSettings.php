<?php
# This file was automatically generated by the MediaWiki 1.35.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "ArisCorp - Starshipexkurs";
$wgMetaNamespace = "ArisCorpStarshipexkurs";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "/experimental/wiki/mediawiki";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://dev.ariscorp.de";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [ '1x' => "https://www.ariscorp.de/assets/img/misc/aris-logo.webp" ];

## UPO means: this is also a user preference option

$wgEnableEmail = false;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "apache@ðŸŒ».invalid";
$wgPasswordSender = "apache@ðŸŒ».invalid";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "localhost";
$wgDBname = "aris-shipdatabase";
$wgDBuser = "aris-shipdatabase";
$wgDBpassword = "xHY44CXC9LTNzKHwC1F3h35dr5h4NQ";

# MySQL specific settings
$wgDBprefix = "exkurs_";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = false;
#$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale. This should ideally be set to an English
## language locale so that the behaviour of C library functions will
## be consistent with typical installations. Use $wgLanguageCode to
## localise the wiki.
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "de";

$wgSecretKey = "024a3f2ccb3799dc6b102dca1bedd78b3708d7593be4daaf1bef4b83043f345c";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "ed54dfb7a65d6748";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['edit'] = false;

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "timeless";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );


# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'PageImages' );
wfLoadExtension( 'PdfHandler' );


# End of automatically generated settings.
# Add more configuration options below.
wfLoadSkin( 'Citizen' );

wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'EmbedVideo' );
wfLoadExtension( 'MsUpload' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'WikiSEO' );
wfLoadExtension( 'Cite' );
wfLoadExtension("DynamicPageList");
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'CommonsMetadata' );
wfLoadExtension( 'ReplaceText' );
wfLoadExtension( 'TextExtracts' );
wfLoadExtension( 'Popups' );
wfLoadExtension( 'RevisionSlider' );
wfLoadExtension( 'CheckUser' );
wfLoadExtension( 'Babel' );
wfLoadExtension( 'cldr' );
#wfLoadExtension( 'CleanChanges' );
wfLoadExtension( 'LocalisationUpdate' );
wfLoadExtension( 'UniversalLanguageSelector' );
wfLoadExtensions( array( 'ConfirmEdit', 'ConfirmEdit/ReCaptchaNoCaptcha' ) );
wfLoadExtension( 'CodeMirror' );
wfLoadExtension( 'CookieWarning' );
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/CSS/CSS.php";
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/Tabber/Tabber.php";
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/RSS/RSS.php";
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/PageImages/PageImages.php";
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/Flow/Flow.php";
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/Translate/Translate.php";
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/googleAnalytics/googleAnalytics.php";
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/VisualEditor/VisualEditor.php";
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/Scribunto/Scribunto.php";
require_once( "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/UploadWizard/UploadWizard.php" );
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/EventLogging/EventLogging.php";
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/ExternalData/ExternalData.php";
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/Renameuser/Renameuser.php";
require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/NativeSvgHandler/NativeSvgHandler.php";
#require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/Lazyload/Lazyload.php";
#require_once "http://dev.ariscorp.de/experimental/wiki/mediawiki/extensions/Antispam/Antispam.php"; 
$edgAllowExternalDataFrom = array('https://starcitizen.tools','http://starcitizendb.com/','http://pledgetrack.rabbitsraiders.net','http://dev.ariscorp.de','https://www.ariscorp.de');